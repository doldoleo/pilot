spring:
  config:
    activate:
      on-profile: dev 
  
  #oauth2 서버 리소스 서버 설정
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://auth.5finger.co.kr:9000

  cloud:
    #spring cloud config 설정         
    config:
      enabled: false  #false ==> config server에서 구동시 설정가져오기 마!!!      
      uri: http://192.168.0.101:10000  #spring-cloud-starter-config 모듈을 사용하면 정의하는 값
      name: spring-cloud-gateway
      profile: dev
        
      fail-fast: false #config-server에 연결할 수 없는 경우 애플리케이션 구동에 실패
      retry: #config server에 연결 실패하거나 응답 에러가 발생하는 경우 재시도하는 정책
          initial-interval: 1000 #config server api 요청 실패 후 다음 retry 요청을 위한 internal 입니다. 단위는 ms(밀리세컨드)입니다.
          max-attempts: 3 #최대로 retry하는 횟수
          multiplier: 1.1
      request-connect-timeout: 2000 #config server 요청 시 사용하는 connection timeout 값
      request-read-timeout: 5000 #config server 요청 시 사용하는 read timeout 값입니다.
        
    bus:
        destination: gateway.config.topic.dev
          
    #gateway setting    
    gateway:
      default-filters: # 전역 필터 설정 (모든 라우터 목록들에 대해서 해당 필터 적용)
        - name : GlobalFilter #전역 필터 클래스 이름
          args: #  필터에 전달되는 추가 인수 설정
            baseMessage : Spring Cloud Gateway GlobalFilter
            preLogger : true
            postLogger : true
      routes: #라우팅 규칙 목록 설정
        - id : payment-service
          uri:  http://payment-service.pilot # 
          predicates:
            - Path=/api/v1/payment/**
            - Method=GET,POST,PUT,DELETE,OPTIONS
          filters:
            - AddRequestHeader=first-request, first-request-header2 #요청 헤더 추가 필터 적용
            - AddResponseHeader=first-response, first-response-header2 #응답 헤더 추가 필터 적용
            - CustomFilter 
        - id : user-service
          uri: http://user-service.pilot 
          predicates:
            - Path=/api/v1/user/**
          filters:
            - CustomFilter
