server:
  port: 9999

spring:
  application:
    name: swagger-gateway #MSA에서 해당 서비스를 구별할 수 있는 고유한 ID
  profiles:
    active: local 

  main:
    web-application-type: reactive    

  kafka:
    bootstrap-servers: 192.168.0.101:32100 # kafka 서버 주소:포트

  cloud:
    bus:
      enabled: true # # Bus로 설정변경 새로고침 활성화
      trace:
        enabled: true
      refresh:  # busrefresh EndPoint 활성화 호출시 전체 Config Bus Client 들에게 메세지 전송
        enabled: true
      env:
        enabled: true
      destination: gateway.config.topic.dev        

management:
  endpoints:
    web:
      exposure:
        include: "*"
          
  endpoint:
    gateway:
      enabled: true  # default: true    
 
springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    use-root-path: true
    enabled: true
    #path: /swagger-ui/index.html
    config-url: /v3/api-docs/swagger-config
    urls:
       - url: /api-docs/payment
         name: 지급결제 서비스  
       - url: /api-docs/user
         name: 회원 서비스  
       - url: /api-docs/merge
         name: 결합 서비스  
    urls-primary-name: Gateway  
    
---
spring:
  config:
     activate:
        on-profile: local
  cloud:
  
    #spring cloud config 설정   
    config:
      enabled: false  #config server에서 구동시 설정가져오기 마!!!      
      uri: http://localhost:10000  #spring-cloud-starter-config 모듈을 사용하면 정의하는 값
      name: swagger-gateway
      profile: local
    
      fail-fast: false #config-server에 연결할 수 없는 경우 애플리케이션 구동에 실패
      retry: #config server에 연결 실패하거나 응답 에러가 발생하는 경우 재시도하는 정책
          initial-interval: 1000 #config server api 요청 실패 후 다음 retry 요청을 위한 internal 입니다. 단위는 ms(밀리세컨드)입니다.
          max-attempts: 3 #최대로 retry하는 횟수
          multiplier: 1.1
      request-connect-timeout: 2000 #config server 요청 시 사용하는 connection timeout 값
      request-read-timeout: 5000 #config server 요청 시 사용하는 read timeout 값입니다.

    bus:
        destination: gateway.config.topic.local
  
    gateway:
      globalcors:
        add-to-simple-url-handler-mapping: true
      routes: #라우팅 규칙 목록 설정
        - id : payment-service
          uri: http://localhost:8081 #lb://USER-SERVICE
          predicates:
            - Path=/api/v1/payment/**
            - Method=GET,POST,PUT,DELETE,OPTIONS
        - id : payment-service-api-docs
          uri: http://localhost:8081 #lb://USER-SERVICE
          predicates:
            - Path=/api-docs/payment
            - Method=GET    
        - id : user-service
          uri: http://localhost:8082 #lb://USER-SERVICE
          predicates:
            - Path=/api/v1/user/**
            - Method=GET,POST,PUT,DELETE,OPTIONS  
        - id : user-service-api-docs
          uri: http://localhost:8082 #lb://USER-SERVICE
          predicates:
            - Path=/api-docs/user/**
            - Method=GET    
        - id : feign-service-api-docs
          uri: http://localhost:9090 #lb://FEIGN-SERVICE
          predicates:
            - Path=/api-docs/merge/**
            - Method=GET    
        - id : feign-service
          uri: http://localhost:9090 #lb://FEIGN-SERVICE
          predicates:
            - Path=/api/v1/merge/**
            - Method=GET,POST,PUT,DELETE,OPTIONS    
---
spring:
  config:
     activate:
        on-profile: dev
  cloud:
  
    #spring cloud config 설정   
    config:
      enabled: false  #config server에서 구동시 설정가져오기 마!!!      
      uri: http://192.168.0.101:10000  #spring-cloud-starter-config 모듈을 사용하면 정의하는 값
      name: swagger-gateway
      profile: dev
    
      fail-fast: false #config-server에 연결할 수 없는 경우 애플리케이션 구동에 실패
      retry: #config server에 연결 실패하거나 응답 에러가 발생하는 경우 재시도하는 정책
          initial-interval: 1000 #config server api 요청 실패 후 다음 retry 요청을 위한 internal 입니다. 단위는 ms(밀리세컨드)입니다.
          max-attempts: 3 #최대로 retry하는 횟수
          multiplier: 1.1
      request-connect-timeout: 2000 #config server 요청 시 사용하는 connection timeout 값
      request-read-timeout: 5000 #config server 요청 시 사용하는 read timeout 값입니다.

    bus:
        destination: gateway.config.topic.dev  

    gateway:
      globalcors:
        add-to-simple-url-handler-mapping: true
      routes: #라우팅 규칙 목록 설정
        - id : payment-service-api-docs
          uri: http://payment-service.pilot #http://payment-service.pilot #http://localhost:8000 OR lb://USER-SERVICE
          predicates:
            - Path=/api-docs/payment
            - Method=GET
        - id : payment-service
          uri: http://payment-service.pilot #http://payment-service.pilot #http://localhost:8000 OR lb://USER-SERVICE
          predicates:
            - Path=/api/v1/payment/**
            - Method=GET,POST,PUT,DELETE,OPTIONS
        - id : user-service
          uri: http://user-service.pilot #http://payment-service.pilot #http://localhost:8000 OR lb://USER-SERVICE
          predicates:
            - Path=/api/v1/user/**
            - Method=GET,POST,PUT,DELETE,OPTIONS 
        - id : user-service-api-docs
          uri: http://user-service.pilot #http://payment-service.pilot #http://localhost:8000 OR lb://USER-SERVICE
          predicates:
            - Path=/api-docs/user
            - Method=GET     
        - id : feign-service-api-docs
          uri: http://feign-service.pilot #lb://FEIGN-SERVICE
          predicates:
            - Path=/api-docs/merge/**
            - Method=GET    
        - id : feign-service
          uri: http://feign-service.pilot #http://payment-service.pilot #http://localhost:8000 OR lb://USER-SERVICE
          predicates:
            - Path=/api/v1/merge/**
            - Method=GET,POST,PUT,DELETE,OPTIONS  